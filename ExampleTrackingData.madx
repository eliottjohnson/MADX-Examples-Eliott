//The following MAD-X code sample defines the tracking of four particles with the generation of
//a single file with name basisone holding the tracking data for all four particles.

TITLE, s='Example Tracking Data - Reading from PS seq';

//Read input file with machine description
call file="ps_mu.seq";
option,-echo; // switch off copying the input to the standard output

//Define the beam
Beam, Particle = proton, sequence=PR.BHT01, energy=25.0; // Energy is in GeV

//Make the sequence active
use, sequence=PR.BHT01; 

//The following sample code defines the plotting of the x-px and y-py phase space coordinates
//for all four particles. It takes into account the fact that all coordinates are in a single file
//with table=trackone and defines the filename where tracking data is to be found (basisone)
//with trackfile=basis.

// track particles
track, file=basis, dump, onetable; //onetable creates a unique table but if you need individual particles you can omit "onetable" and you'll have the four tables.
start, x= 2e-3, px=0, y= 2e-3, py=0;
start, x= 4e-3, px=0, y= 4e-3, py=0;
start, x= 6e-3, px=0, y= 6e-3, py=0;
start, x= 8e-3, px=0, y= 8e-3, py=0;
run,turns=1024;
endtrack;

//MAD-X then calls GNUPLOT as a subprocess to execute this file, which generates the file
//tmpplot.ps. The file tmpplot.ps is then appended to the file plot.ps determined by the
//attribute file=plot. The files gnu plot.gp and tmpplot.ps are then discarded.
//The same process is repeated for the second plot command, resulting in a growing file plot.ps.


// plot trajectories
setplot, post=1;
title, "FODO phase-space test";
plot, file=plot, table=trackone, trackfile=basis, noversion, multiple, haxis=x, vaxis=px, particle=1,2,3,4;
plot, file=plot, table=trackone, trackfile=basis, noversion, multiple, haxis=y, vaxis=py, particle=1,2,3,4;
